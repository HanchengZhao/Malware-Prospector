    function generate_slide(data){
      var colorRange = ["rgba(44,123,182,1)","rgba(0,166,202,1)","rgba(0,204,188,1)",
      "rgba(144,235,157,1)","rgba(255,255,140,1)","rgba(249,208,87,1)","rgba(242,152,46,1)","rgba(232,104,24,1)","rgba(215,25,28,1)"];
      var colorRangeLen = colorRange.length;
      
      for(var i = 0; i < data.length; i++)
      {
        var featureObj = data[i];
        var name = Object.keys(featureObj)[0];
        var min = featureObj[name].min;
        var max = featureObj[name].max;
        var step = featureObj[name].step;
        // append each feature to dom
        var box = d3.select("#feature")
                  .append("div")
                  .attr("id", "box" + i) // add separating boxes
                  .style("border", "dashed")
                  .style("margin", "2px")
                  .style("padding", "30px");
        var feature = d3.select("#box"  + i);
        feature.append("h2")
        .attr("name", "feature_name" + i)
        .text(name);
        
        if (d3.select("#box" + i).select("h2").text().includes("histogram")&& min < 1)
        {
          min = Number(0);
        }
        feature.append("h2")
        .text("Value: ")
        .append("span")
        .attr("id", "slider" + i +"text")
        .attr("name", "feature_value" + i)
        .text(min);
        
        feature.append("div")
        .attr("id", "slider"+ i);
        
        var currentColorRange = "";
        if (i < 10)
        {
          currentColorRange = colorRange[0];
          for (var j = 0; j < colorRangeLen; j++)
          {
            currentColorRange = currentColorRange + "," + colorRange[j];
          }
        }
        else
        {
            currentColorRange = colorRange[colorRangeLen - 3];
            for (var j = colorRangeLen - 2; j < colorRangeLen; j++)
            {
              currentColorRange = currentColorRange + "," + colorRange[j];
            }
        }
        
        var slider = d3.select("#slider" + i);
        slider.style("background", "-webkit-linear-gradient(left," + currentColorRange + ")");
        slider.style("background", "-o-linear-gradient(right," + currentColorRange + ")");
        slider.style("background", "-moz-linear-gradient(right," + currentColorRange + ")");
        slider.style("background", "linear-gradient(to right," + currentColorRange + ")");
        displaySlider(min,max,step,i);
      }
      //click predict button
      $("#predict").click(function(){
          $("#fa-spin").css("visibility", "visible");
          eval_data(data);
        });
    }
    
    function render_random()
    {
      // console.log("render_random");
      $(function(){
        $.getJSON("/ranking", {
          sort_type: "random_forests"
        }, function(data) {
          // console.log("getting random ranking");
          generate_slide(data);
        });
      });  
    }
    
    function render_lasso()
    {
      // console.log("render_lasso");
      $(function(){
        $.getJSON("/ranking", {
          sort_type: "lasso"
        }, function(data) {
          // console.log("getting lasso ranking");
          generate_slide(data);
        });
      });  
    }
    
    function render(sort_type){
    //clear elements in #feature tag
    $('#feature').html('');
    // console.log("clear");
      switch (sort_type)
      {
        case "random_forests":
          render_random();
          break;
        case "lasso":
          render_lasso();
          break;
      }
    }
    
    //Get data and transfer it to decision tree
    function eval_data(data)
    {
       var name = [];
       var value = [];
       
       for(var i = 0; i < data.length; i++)
       {
         name.push($('h2[name=feature_name' + i + ']').text());
         value.push($('span[name=feature_value' + i + ']').text());
       }
      // console.log(JSON.stringify(name))
      // console.log(value);
        $.post('/eval', {
          
          feature_name: JSON.stringify(name),
          feature_value: JSON.stringify(value)
        }, function(data) {
          // console.log(data);
          $("#fa-spin").css("visibility", "hidden");
          $("#pred_label").css("visibility", "visible");
          $("#pred_label").text(data);
        },'json');
    }
    
    function displaySlider(min,max,step,i){
      d3.select("#slider" +i).call(d3.slider().axis(true).min(min).max(max).step(step).on("slide", function(evt, value) {
          final_value_patten = value.toString().split(".");
          
          if (d3.select("#box" + i).select("h2").text().includes("histogram"))
          {
            final_value = parseInt(final_value_patten[0]);
          }
          else
          {
            final_value = parseFloat(final_value_patten[0] 
                                     + "." 
                                     + final_value_patten[1]).toExponential(3);
          }
          d3.select("#slider"+ i +"text").text(final_value);
        }));
    }
    
    // when page loads, get default ranking
    $(document).ready(render("random_forests"));
    // render("default");
    // ranking button 
    $("#random_forests").click(function(){
      render("random_forests");
      // console.log("random_forests");
    });
    $("#lasso").click(function(){
      render("lasso");
    });
    
    $('body').on('click', '.btn-group button', function (e) {
        $(this).addClass('active');
        $(this).siblings().removeClass('active');
        //do any other button related things
    });