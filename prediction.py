import pickle
import random


#transfor the data get from front end to valid input for f_pred()
def create_input(m_pass):
    res = [0*i for i in xrange(len(m_pass))]
    with open('data/maps/feature_map.pkl', 'rb') as input:
        f_map = pickle.load(input)
        for key in m_pass:
            if "\n" in key: # get rid of "\n"
                key = key[:-1]
            index = f_map[key]
            # try:
            value = m_pass[key]
            # except:
            #     print  key + " does not exist"
            res[index] = value
        return res
        
        
#return the prediction in string (feature name)        
def f_pred(X):
    with open('data/models/random_forest.pkl', 'rb') as input:
        forest = pickle.load(input)
    with open('data/maps/get_label_map.pkl', 'rb') as input2:
        Array = []
        Array.append(X)
        label = pickle.load(input2)
        # print forest.predict(Array)[0]
        
        return label[forest.predict(Array)[0]]

#front end will call this function
def get_Prediction(m_pass):
    return f_pred(create_input(m_pass))
    
#unit test
# with open('feature_map.pkl', 'rb') as input3:
#     f_map = pickle.load(input3)
#     m_passf = dict()
#     random.seed()
#     for key in f_map:
#         m_passf[key] = random.randint(0, 40)
#     X = create_input(m_passf)
#     res = f_pred(X)
#     print res