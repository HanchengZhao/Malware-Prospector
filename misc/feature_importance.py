import csv
import numpy as np
# import matplotlib.pyplot as plt

from sklearn.ensemble import ExtraTreesClassifier


# X = []
# Y = []
def openMetrics(Dir):
	X = []
	with open(Dir,'rb') as f:
		reader = csv.reader(f)
		next(reader, None)
		for row in reader:
			row_data = []
			for i in row[1:]:
				row_data.append(float(i))
			X.append(row_data)
	f.close()
	return X

# print reader
def openLabel(Dirl):
	Y = []
	with open(Dirl,'rb') as f:
		reader = csv.reader(f)
		i = 0
		m = dict()
		for row in reader:
			if row[1] in m:
				Y.append(m.get(row[1]))
			else:
				m[row[1]] = i
				i+=1
				Y.append(m.get(row[1]))
	f.close()
	return Y
	
X = openMetrics("a_features.csv")
y = openLabel("a_label.csv")


# Build a forest and compute the feature importances
forest = ExtraTreesClassifier(n_estimators=250,
                              random_state=0)

forest.fit(X, y)
importances = forest.feature_importances_
indices = np.argsort(importances)[::-1]
print importances

std = np.std([tree.feature_importances_ for tree in forest.estimators_],
             axis=0)
indices = np.argsort(importances)[::-1]
print indices
# Print the feature ranking
print("Feature ranking:")

# for f in range(X.shape[1]):
#     print("%d. feature %d (%f)" % (f + 1, indices[f], importances[indices[f]]))

# print X.shape