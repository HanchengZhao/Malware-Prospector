from flask import Flask, render_template, jsonify, request
import pickle
import json
import prediction as p
import random_sample as rs

app = Flask(__name__)

@app.route('/')
def index():
    with open('data/models/models.json') as json_data:
        model_json = json.load(json_data)
        print "get json data"
        
    with open('data/maps/l_filename_map.pkl') as l:
        labels = pickle.load(l).keys()
        print "get labels"
    # for i in model_json:
    #     print model_json[i]["Description"]
    return render_template('index.html', models = model_json, labels = labels)

@app.route('/ranking')
def ranking():
    filename = request.args.get("filename")
    ranking = pickle.load(open("data/ranking/" + str(filename), "rb" ))
    return jsonify(ranking)
    #     return jsonify(forests_rank)
    # sort_type = request.args.get("sort_type")
    # if sort_type == "random_forests":
    #     forests_rank = pickle.load(open("data/ranking/forests_ranking.pkl", "rb" ))
    #     return jsonify(forests_rank)
    # if sort_type == "lasso":
    #     lasso_rank = pickle.load(open("data/ranking/lasso_ranking.pkl", "rb" ))
    #     return jsonify(lasso_rank)
    
@app.route('/eval', methods = ['POST'])
def eval_data():
    feature_map = {}
    feature_name = json.loads(request.form.get("feature_name"))
    feature_value = json.loads(request.form.get("feature_value"))
    model_name = json.loads(request.form.get("model_name"))
    model_url = json.loads(request.form.get("model_url"))
    
    print(model_url)
    for i in range(len(feature_name)):
        feature_map.update({feature_name[i]: feature_value[i]}) 
    label = p.get_Prediction(feature_map)
    return jsonify(label)

@app.route('/random_sample')
def random_sample():
    label = request.args.get("label")
    random_value = rs.get_sample(label)
    return jsonify(random_value)

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=8081, debug = True)